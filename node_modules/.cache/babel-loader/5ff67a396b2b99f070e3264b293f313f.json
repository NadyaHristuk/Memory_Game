{"ast":null,"code":"var _jsxFileName = \"/Users/hristuknadya/Downloads/Memory_Game-master/src/components/card/Card.jsx\";\nimport React from 'react'; // import { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // import * as gameActions from '../../redux/GameAction';\n\nimport './style.css';\n\nfunction Card({\n  card,\n  overturn,\n  id,\n  handleClick,\n  idx,\n  height,\n  width,\n  disabled\n}) {\n  // console.log(idx, id);\n  let cardClass = classNames({\n    'flipper': true,\n    'overturn': card.overturn || card.rival\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"flip-container \".concat(overturn ? 'flipped' : ''),\n    style: {\n      width,\n      height\n    },\n    onClick: () => {\n      handleClick(idx, id);\n    } // onClick={() => /*disabled ? null : */ handleClick(id)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: cardClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: id,\n    style: {\n      height,\n      width\n    },\n    className: overturn ? 'front' : 'back',\n    src: overturn ? \"/img/\".concat(idx, \".png\") : \"/img/logo192.png\",\n    alt: \"pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}\n\nCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  //   step: PropTypes.number.isRequired,\n  //   overturn: PropTypes.bool.isRequired,\n  idx: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n}; // const mapStateToProps = state => ({\n//   step: state.step,\n//   overturn: state.overturn,\n// });\n// const mapDispatchToProps = dispatch => ({\n//   handleClick: () => dispatch(gameActions.shot(1)),\n// });\n\nexport default Card; // export default connect()(Card);\n\n/* mapStateToProps,\n  mapDispatchToProps, */","map":{"version":3,"sources":["/Users/hristuknadya/Downloads/Memory_Game-master/src/components/card/Card.jsx"],"names":["React","PropTypes","classNames","Card","card","overturn","id","handleClick","idx","height","width","disabled","cardClass","rival","propTypes","func","isRequired","string","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA,IADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,EAHY;AAIZC,EAAAA,WAJY;AAKZC,EAAAA,GALY;AAMZC,EAAAA,MANY;AAOZC,EAAAA,KAPY;AAQZC,EAAAA;AARY,CAAd,EASG;AACD;AACA,MAAIC,SAAS,GAAGV,UAAU,CAAC;AACzB,eAAY,IADa;AAEzB,gBAAaE,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACS;AAFV,GAAD,CAA1B;AAIA,SACE,0CACE;AACE,IAAA,SAAS,2BAAoBR,QAAQ,GAAG,SAAH,GAAe,EAA3C,CADX;AAEE,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,WAAW,CAACC,GAAD,EAAMF,EAAN,CAAX;AACD,KALH,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAEM,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEN,EADN;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAFT;AAGE,IAAA,SAAS,EAAEL,QAAQ,GAAG,OAAH,GAAa,MAHlC;AAIE,IAAA,GAAG,EAAEA,QAAQ,kBAAWG,GAAX,8BAJf;AAKE,IAAA,GAAG,EAAC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF,CADF;AAsBD;;AAEDL,IAAI,CAACW,SAAL,GAAiB;AACfP,EAAAA,WAAW,EAAEN,SAAS,CAACc,IAAV,CAAeC,UADb;AAEf;AACA;AACAR,EAAAA,GAAG,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAJP;AAKfP,EAAAA,MAAM,EAAER,SAAS,CAACiB,MAAV,CAAiBF,UALV;AAMfN,EAAAA,KAAK,EAAET,SAAS,CAACiB,MAAV,CAAiBF;AANT,CAAjB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeb,IAAf,C,CACA;;AACA","sourcesContent":["import React from 'react';\n// import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import * as gameActions from '../../redux/GameAction';\nimport './style.css';\n\nfunction Card({\n  card,\n  overturn,\n  id,\n  handleClick,\n  idx,\n  height,\n  width,\n  disabled,\n}) {\n  // console.log(idx, id);\n  let cardClass = classNames({\n    'flipper' : true,\n    'overturn' : card.overturn || card.rival\n});\n  return (\n    <>\n      <div\n        className={`flip-container ${overturn ? 'flipped' : ''}`}\n        style={{ width, height }}\n        onClick={() => {\n          handleClick(idx, id);\n        }}\n        // onClick={() => /*disabled ? null : */ handleClick(id)}\n      >\n        <div className={cardClass}>\n          <img\n            id={id}\n            style={{ height, width }}\n            className={overturn ? 'front' : 'back'}\n            src={overturn ? `/img/${idx}.png` : `/img/logo192.png`}\n            alt=\"pic\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nCard.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  //   step: PropTypes.number.isRequired,\n  //   overturn: PropTypes.bool.isRequired,\n  idx: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n};\n\n// const mapStateToProps = state => ({\n//   step: state.step,\n//   overturn: state.overturn,\n// });\n// const mapDispatchToProps = dispatch => ({\n//   handleClick: () => dispatch(gameActions.shot(1)),\n// });\nexport default Card;\n// export default connect()(Card);\n/* mapStateToProps,\n  mapDispatchToProps, */\n"]},"metadata":{},"sourceType":"module"}