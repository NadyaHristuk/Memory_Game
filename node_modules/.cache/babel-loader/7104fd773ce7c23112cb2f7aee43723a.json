{"ast":null,"code":"var _jsxFileName = \"/Users/hristuknadya/Downloads/Memory_Game-master/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Board from './components/board/Board';\nimport * as gameActions from './redux/GameAction';\nimport './App.css'; // function App({ cards, step, handleClick, overturn, id, disabled }) {\n//   console.log(cards, disabled, cards.id);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h2>Memory Game by Vasil Haida for Keplercode</h2>\n//         <Board\n//           cards={cards}\n//           step={step}\n//           handleClick={handleClick}\n//           overturn={overturn}\n//           id={id}\n//           disabled={disabled}\n//         />\n//       </header>\n//     </div>\n//   );\n// }\n// App.propTypes = {\n//   cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n//   step: PropTypes.number.isRequired,\n//   handleClick: PropTypes.func.isRequired,\n//   overturn: PropTypes.arrayOf(PropTypes.number).isRequired,\n//   // id: PropTypes.number.isRequired,\n//   disabled: PropTypes.bool.isRequired,\n// };\n// const mapStateToProps = state => ({\n//   cards: state.cards,\n//   step: state.step,\n//   overturn: state.overturn,\n//   id: state.id,\n//   disabled: state.disabled,\n// });\n// const mapDispatchToProps = dispatch => ({\n//   handleClick: id => dispatch(gameActions.shot(id)),\n// });\n\nfunction App({\n  cards,\n  step,\n  showCards,\n  handleClick\n}) {\n  console.log(cards, step);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Memory Game by Vasil Haida for Keplercode\"), cards.length === 0 ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: showCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Start\") : null, React.createElement(Board, {\n    cards: cards,\n    step: step,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}\n\nApp.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired // step: PropTypes.number.isRequired,\n  // handleClick: PropTypes.func.isRequired,\n  // overturn: PropTypes.arrayOf(PropTypes.number).isRequired,\n  // // id: PropTypes.number.isRequired,\n  // disabled: PropTypes.bool.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  cards: state.cards,\n  step: state.step\n}); // step: state.step,\n// overturn: state.overturn,\n// id: state.id,\n// disabled: state.disabled,\n\n\nconst mapDispatchToProps = dispatch => ({\n  showCards: () => dispatch(gameActions.startGame()),\n  handleClick: (idx, id) => dispatch(gameActions.overturnCard(idx, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/hristuknadya/Downloads/Memory_Game-master/src/App.js"],"names":["React","PropTypes","connect","Board","gameActions","App","cards","step","showCards","handleClick","console","log","length","propTypes","arrayOf","shape","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","startGame","idx","id","overturnCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAb,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBC,IAAnB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAEGD,KAAK,CAACM,MAAN,KAAiB,CAAjB,GACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,GAIG,IANN,EAOG,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,KAAd;AAAqB,IAAA,IAAI,EAAEC,IAA3B;AAAiC,IAAA,WAAW,EAAEE,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADF,CADF;AAaD;;AAEDJ,GAAG,CAACQ,SAAJ,GAAgB;AACdP,EAAAA,KAAK,EAAEL,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB,EAAhB,CAAlB,EAAuCC,UADhC,CAEd;AACA;AACA;AACA;AACA;;AANc,CAAhB;;AASA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ,KADmB;AAEhCC,EAAAA,IAAI,EAAEW,KAAK,CAACX;AAFoB,CAAL,CAA7B,C,CAIA;AACA;AACA;AACA;;;AACA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,SAAS,EAAE,MAAMY,QAAQ,CAAChB,WAAW,CAACiB,SAAZ,EAAD,CADa;AAEtCZ,EAAAA,WAAW,EAAE,CAACa,GAAD,EAAMC,EAAN,KAAaH,QAAQ,CAAChB,WAAW,CAACoB,YAAZ,CAAyBF,GAAzB,EAA8BC,EAA9B,CAAD;AAFI,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CACpBe,eADoB,EAEpBE,kBAFoB,CAAP,CAGbd,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Board from './components/board/Board';\nimport * as gameActions from './redux/GameAction';\nimport './App.css';\n\n// function App({ cards, step, handleClick, overturn, id, disabled }) {\n//   console.log(cards, disabled, cards.id);\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h2>Memory Game by Vasil Haida for Keplercode</h2>\n//         <Board\n//           cards={cards}\n//           step={step}\n//           handleClick={handleClick}\n//           overturn={overturn}\n//           id={id}\n//           disabled={disabled}\n//         />\n//       </header>\n//     </div>\n//   );\n// }\n\n// App.propTypes = {\n//   cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n//   step: PropTypes.number.isRequired,\n//   handleClick: PropTypes.func.isRequired,\n//   overturn: PropTypes.arrayOf(PropTypes.number).isRequired,\n//   // id: PropTypes.number.isRequired,\n//   disabled: PropTypes.bool.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   cards: state.cards,\n//   step: state.step,\n//   overturn: state.overturn,\n//   id: state.id,\n//   disabled: state.disabled,\n// });\n// const mapDispatchToProps = dispatch => ({\n//   handleClick: id => dispatch(gameActions.shot(id)),\n// });\n\nfunction App({ cards, step, showCards, handleClick }) {\n  console.log(cards, step);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Memory Game by Vasil Haida for Keplercode</h2>\n        {cards.length === 0 ? (\n          <button type=\"button\" onClick={showCards}>\n            Start\n          </button>\n        ) : null}\n        {<Board cards={cards} step={step} handleClick={handleClick} />}\n      </header>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  // step: PropTypes.number.isRequired,\n  // handleClick: PropTypes.func.isRequired,\n  // overturn: PropTypes.arrayOf(PropTypes.number).isRequired,\n  // // id: PropTypes.number.isRequired,\n  // disabled: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  cards: state.cards,\n  step: state.step,\n});\n// step: state.step,\n// overturn: state.overturn,\n// id: state.id,\n// disabled: state.disabled,\nconst mapDispatchToProps = dispatch => ({\n  showCards: () => dispatch(gameActions.startGame()),\n  handleClick: (idx, id) => dispatch(gameActions.overturnCard(idx, id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n"]},"metadata":{},"sourceType":"module"}