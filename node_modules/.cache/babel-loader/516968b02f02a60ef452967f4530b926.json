{"ast":null,"code":"function mix(array) {\n  const arr = array.slice(0);\n\n  for (let i = 0; i < array.length; i++) {\n    const mixCard = Math.floor(Math.random() * (i + 1));\n    const casual = arr[i];\n    arr[i] = arr[mixCard];\n    arr[mixCard] = casual;\n  }\n\n  return arr;\n}\n\nexport default function generateCards() {\n  let id = 0;\n  const cards = ['1', '2', '3', '4', '5', '6'].reduce((acc, idx) => {\n    acc.push({\n      id: id++,\n      idx,\n      index: id + 5.1,\n      overturn: false,\n      rival: false\n    });\n    acc.push({\n      id: id++,\n      idx,\n      index: id + 5.1,\n      overturn: false,\n      rival: false\n    });\n    return acc;\n  }, []);\n  return mix(cards);\n}","map":{"version":3,"sources":["/Users/hristuknadya/Downloads/Memory_Game-master/src/utils/generateCards.js"],"names":["mix","array","arr","slice","i","length","mixCard","Math","floor","random","casual","generateCards","id","cards","reduce","acc","idx","push","index","overturn","rival"],"mappings":"AAAA,SAASA,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAhB;AACA,UAAMM,MAAM,GAAGR,GAAG,CAACE,CAAD,CAAlB;AACAF,IAAAA,GAAG,CAACE,CAAD,CAAH,GAASF,GAAG,CAACI,OAAD,CAAZ;AACAJ,IAAAA,GAAG,CAACI,OAAD,CAAH,GAAeI,MAAf;AACD;;AACD,SAAOR,GAAP;AACD;;AAED,eAAe,SAASS,aAAT,GAAyB;AACtC,MAAIC,EAAE,GAAG,CAAT;AACA,QAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+BC,MAA/B,CAAsC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChED,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACPL,MAAAA,EAAE,EAAEA,EAAE,EADC;AAEPI,MAAAA,GAFO;AAGPE,MAAAA,KAAK,EAAEN,EAAE,GAAG,GAHL;AAIPO,MAAAA,QAAQ,EAAE,KAJH;AAKPC,MAAAA,KAAK,EAAE;AALA,KAAT;AAOAL,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACPL,MAAAA,EAAE,EAAEA,EAAE,EADC;AAEPI,MAAAA,GAFO;AAGPE,MAAAA,KAAK,EAAEN,EAAE,GAAG,GAHL;AAIPO,MAAAA,QAAQ,EAAE,KAJH;AAKPC,MAAAA,KAAK,EAAE;AALA,KAAT;AAOA,WAAOL,GAAP;AACD,GAhBa,EAgBX,EAhBW,CAAd;AAiBA,SAAOf,GAAG,CAACa,KAAD,CAAV;AACD","sourcesContent":["function mix(array) {\n  const arr = array.slice(0);\n  for (let i = 0; i < array.length; i++) {\n    const mixCard = Math.floor(Math.random() * (i + 1));\n    const casual = arr[i];\n    arr[i] = arr[mixCard];\n    arr[mixCard] = casual;\n  }\n  return arr;\n}\n\nexport default function generateCards() {\n  let id = 0;\n  const cards = ['1', '2', '3', '4', '5', '6'].reduce((acc, idx) => {\n    acc.push({\n      id: id++,\n      idx,\n      index: id + 5.1,\n      overturn: false,\n      rival: false,\n    });\n    acc.push({\n      id: id++,\n      idx,\n      index: id + 5.1,\n      overturn: false,\n      rival: false,\n    });\n    return acc;\n  }, []);\n  return mix(cards);\n}\n"]},"metadata":{},"sourceType":"module"}